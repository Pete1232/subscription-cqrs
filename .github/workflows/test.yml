name: "Test and Build"
on:
  pull_request:
  push:
    branches:
      - "main"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-22.05
      - name: Load Cachix
        uses: cachix/cachix-action@v10
        with:
          name: pete1232
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          # Regular expression to exclude derivations for the cache push, for example "(-source$|nixpkgs\.tar\.gz$)".
          # Warning: this filter does not guarantee it will not get pushed in case the path is part of the closure of something that will get pushed.
          # filter out: sources files, docker-layers (which will change with each source update
          # this will leave: caches of the tagged versions of public repositories, sbt-dependencies which will only change on build updates
          pushFilter: (.*docker.*$|.*subscription-cqrs-latest$|.*runtime-deps$|.*extract-dependencies$|.*config.json$)
      - name: Check flake
        run: nix flake check
      - id: build_step
        name: Test, Compile and Assemble
        run: echo "::set-output name=build_id::$(nix build --json | jq -r '.[].outputs | to_entries[].value')::"
