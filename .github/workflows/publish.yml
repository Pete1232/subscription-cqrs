name: Test, Build and Publish a Docker image
on:
  release:
    types: [ published ]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Nix
        uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-22.05
      - name: Load Cachix
        uses: cachix/cachix-action@v10
        with:
          name: pete1232
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          # Regular expression to exclude derivations for the cache push, for example "(-source$|nixpkgs\.tar\.gz$)".
          # Warning: this filter does not guarantee it will not get pushed in case the path is part of the closure of something that will get pushed.
          # filter out: sources files, docker-layers (which will change with each source update
          # this will leave: caches of the tagged versions of public repositories, sbt-dependencies which will only change on build updates
          pushFilter: (.*docker.*$|.*subscription-cqrs-latest$|.*runtime-deps$|.*extract-dependencies$|.*config.json$)
      - name: Check flake
        run: nix flake check
      - id: build_step
        name: Test, Compile and Assemble
        run: echo "::set-output name=build_id::$(nix build --json | jq -r '.[].outputs | to_entries[].value')::"
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # - name: Upload image
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: my-artifact
      #     path: /nix/store/*-docker-image-subscription-cqrs.tar.gz 
      # - name: Extract metadata (tags, labels) for Docker
      #   id: meta
      #   uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      #   with:
      #     context: .
      #     push: true
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
